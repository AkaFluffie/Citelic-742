package com.citelic.game.entity.npc.impl.glacor.attacks;import java.util.ArrayList;import java.util.List;import com.citelic.game.engine.Engine;import com.citelic.game.engine.task.EngineTask;import com.citelic.game.engine.task.EngineTaskManager;import com.citelic.game.entity.Animation;import com.citelic.game.entity.Entity;import com.citelic.game.entity.Graphics;import com.citelic.game.entity.Hit;import com.citelic.game.entity.Hit.HitLook;import com.citelic.game.entity.npc.NPC;import com.citelic.game.entity.npc.impl.glacor.Glacor;import com.citelic.game.entity.npc.impl.glacor.GlacorAttacks;import com.citelic.game.entity.player.Player;import com.citelic.game.map.tile.Tile;/** *  * @author Tyler Represents a Special Range Attack. */public class SpecialRangeAttack implements GlacorAttacks {	ArrayList<Tile> tile = new ArrayList<Tile>();	ArrayList<Player> targets = new ArrayList<Player>();	/**	 * 	 * Handles the adding of targets.	 * 	 * @param glacor	 * 	 * @param target	 */	public void addPossibleTargets(NPC glacor, Entity target) {		for (int regionId : glacor.getMapRegionsIds()) {			List<Integer> playerIndexes = Engine.getRegion(regionId)					.getPlayerIndexes();			if (playerIndexes != null) {				for (int npcIndex : playerIndexes) {					Player player = Engine.getPlayers().get(npcIndex);					if (player == null || player.isDead()							|| player.hasFinished() || !player.isRunning()							|| !player.withinDistance(glacor, 64))						continue;					targets.add(player);				}			}		}	}	@Override	public int attack(final Glacor glacor, final Entity target) {		target.setAttackedBy(glacor);		glacor.setNextAnimation(new Animation(9955));		int SPEED = 50;		glacor.setNextGraphics(new Graphics(905));		Engine.sendProjectile(glacor, new Tile(target), 963, 60, 40, SPEED, 30,				12, 0);		if (!tile.contains(new Tile(target)))			tile.add(new Tile(target));		addPossibleTargets(glacor, target);		EngineTaskManager.schedule(new EngineTask() {			@Override			public void run() {				if (tile.get(0) == null) {					tile.clear();					targets.clear();					this.stop();				}				Engine.sendGraphics(target, new Graphics(899), tile.get(0));				for (Player players : targets) {					if (players == null)						continue;					if (tile.get(0) == null)						continue;					if (players.matches(tile.get(0)) && !glacor.isDead())						players.applyHit(new Hit(glacor,								players.getHitpoints() / 2,								HitLook.REGULAR_DAMAGE));				}				tile.clear();				targets.clear();				this.stop();			}		}, 3);		return 3;	}}